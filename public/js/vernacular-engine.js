// Vernacular Language Engine JavaScript
let currentLanguage = 'en';

// Content data for different languages
const languageContent = {
    waterCycle: {
        en: {
            explanation: [
                { step: 1, text: "The sun heats up water in oceans, rivers, and lakes", emoji: "тШАя╕ПЁЯТз" },
                { step: 2, text: "Water turns into invisible water vapor and rises up (Evaporation)", emoji: "ЁЯТитмЖя╕П" },
                { step: 3, text: "High in the sky, vapor cools down and forms tiny water droplets (Condensation)", emoji: "тШБя╕ПтЭДя╕П" },
                { step: 4, text: "When clouds get heavy with water, it falls down as rain (Precipitation)", emoji: "ЁЯМзя╕ПтмЗя╕П" },
                { step: 5, text: "Rain flows back to oceans and rivers, and the cycle starts again!", emoji: "ЁЯМКЁЯФД" }
            ],
            localExample: {
                title: "ЁЯПа Think of your kitchen!",
                content: "When mom heats water in a pot, you see steam rising up. That steam is like evaporation! When you breathe on a cold window, water droplets appear - that's condensation!"
            },
            smartTranslation: [
                "Evaporation = рдЬрдм рдЧрд░реНрдореА рд╕реЗ рдкрд╛рдиреА рднрд╛рдк рдмрди рдЬрд╛рддрд╛ рд╣реИ, рдЬреИрд╕реЗ рдХреЗрддрд▓реА рд╕реЗ рднрд╛рдк рдирд┐рдХрд▓рддреА рд╣реИ",
                "Condensation = рдЬрдм рднрд╛рдк рдардВрдбреА рд╣реЛрдХрд░ рд╡рд╛рдкрд╕ рдкрд╛рдиреА рдмрдирддреА рд╣реИ, рдЬреИрд╕реЗ рдардВрдбреЗ рдЧрд┐рд▓рд╛рд╕ рдкрд░ рдкрд╛рдиреА рдХреА рдмреВрдВрджреЗрдВ",
                "Rain = рдмрд╛рджрд▓реЛрдВ рд╕реЗ рдЧрд┐рд░рдиреЗ рд╡рд╛рд▓рд╛ рдкрд╛рдиреА, рдЬреЛ рдлрд┐рд░ рд╕реЗ рдирджрд┐рдпреЛрдВ рдореЗрдВ рдорд┐рд▓ рдЬрд╛рддрд╛ рд╣реИ"
            ],
            culturalContext: [
                "ЁЯМзя╕П Monsoon season brings life to our crops",
                "ЁЯПФя╕П Rivers like Ganga start from mountain glaciers",
                "ЁЯМК Our ancestors knew about this cycle through Vedic texts"
            ]
        },
        hi: {
            explanation: [
                { step: 1, text: "рд╕реВрд░реНрдп рд╕рдореБрджреНрд░, рдирджрд┐рдпреЛрдВ рдФрд░ рдЭреАрд▓реЛрдВ рдХреЗ рдкрд╛рдиреА рдХреЛ рдЧрд░реНрдо рдХрд░рддрд╛ рд╣реИ", emoji: "тШАя╕ПЁЯТз" },
                { step: 2, text: "рдкрд╛рдиреА рдЕрджреГрд╢реНрдп рднрд╛рдк рдмрдирдХрд░ рдКрдкрд░ рдЙрдарддрд╛ рд╣реИ (рд╡рд╛рд╖реНрдкреАрдХрд░рдг)", emoji: "ЁЯТитмЖя╕П" },
                { step: 3, text: "рдЖрд╕рдорд╛рди рдореЗрдВ рдКрдкрд░, рднрд╛рдк рдардВрдбреА рд╣реЛрдХрд░ рдЫреЛрдЯреА рдкрд╛рдиреА рдХреА рдмреВрдВрджреЗрдВ рдмрдирд╛рддреА рд╣реИ (рд╕рдВрдШрдирди)", emoji: "тШБя╕ПтЭДя╕П" },
                { step: 4, text: "рдЬрдм рдмрд╛рджрд▓ рдкрд╛рдиреА рд╕реЗ рднрд╛рд░реА рд╣реЛ рдЬрд╛рддреЗ рд╣реИрдВ, рддреЛ рдмрд╛рд░рд┐рд╢ рд╣реЛрддреА рд╣реИ (рд╡рд░реНрд╖рд╛)", emoji: "ЁЯМзя╕ПтмЗя╕П" },
                { step: 5, text: "рдмрд╛рд░рд┐рд╢ рдХрд╛ рдкрд╛рдиреА рд╡рд╛рдкрд╕ рд╕рдореБрджреНрд░ рдФрд░ рдирджрд┐рдпреЛрдВ рдореЗрдВ рдЪрд▓рд╛ рдЬрд╛рддрд╛ рд╣реИ, рдФрд░ рдЪрдХреНрд░ рдлрд┐рд░ рд╢реБрд░реВ рд╣реЛрддрд╛ рд╣реИ!", emoji: "ЁЯМКЁЯФД" }
            ],
            localExample: {
                title: "ЁЯПа рдЕрдкрдиреА рд░рд╕реЛрдИ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рд╕реЛрдЪреЗрдВ!",
                content: "рдЬрдм рдорд╛рдБ рдмрд░реНрддрди рдореЗрдВ рдкрд╛рдиреА рдЧрд░реНрдо рдХрд░рддреА рд╣реИ, рддреЛ рдЖрдк рднрд╛рдк рдКрдкрд░ рдЙрдарддреЗ рджреЗрдЦрддреЗ рд╣реИрдВред рд╡рд╣ рднрд╛рдк рд╡рд╛рд╖реНрдкреАрдХрд░рдг рдЬреИрд╕реА рд╣реИ! рдЬрдм рдЖрдк рдардВрдбреА рдЦрд┐рдбрд╝рдХреА рдкрд░ рд╕рд╛рдВрд╕ рд▓реЗрддреЗ рд╣реИрдВ, рддреЛ рдкрд╛рдиреА рдХреА рдмреВрдВрджреЗрдВ рджрд┐рдЦрд╛рдИ рджреЗрддреА рд╣реИрдВ - рд╡рд╣ рд╕рдВрдШрдирди рд╣реИ!"
            },
            smartTranslation: [
                "рд╡рд╛рд╖реНрдкреАрдХрд░рдг = рдЬрдм рдЧрд░реНрдореА рд╕реЗ рдкрд╛рдиреА рднрд╛рдк рдмрди рдЬрд╛рддрд╛ рд╣реИ, рдЬреИрд╕реЗ рдХреЗрддрд▓реА рд╕реЗ рднрд╛рдк рдирд┐рдХрд▓рддреА рд╣реИ",
                "рд╕рдВрдШрдирди = рдЬрдм рднрд╛рдк рдардВрдбреА рд╣реЛрдХрд░ рд╡рд╛рдкрд╕ рдкрд╛рдиреА рдмрдирддреА рд╣реИ, рдЬреИрд╕реЗ рдардВрдбреЗ рдЧрд┐рд▓рд╛рд╕ рдкрд░ рдкрд╛рдиреА рдХреА рдмреВрдВрджреЗрдВ",
                "рдмрд╛рд░рд┐рд╢ = рдмрд╛рджрд▓реЛрдВ рд╕реЗ рдЧрд┐рд░рдиреЗ рд╡рд╛рд▓рд╛ рдкрд╛рдиреА, рдЬреЛ рдлрд┐рд░ рд╕реЗ рдирджрд┐рдпреЛрдВ рдореЗрдВ рдорд┐рд▓ рдЬрд╛рддрд╛ рд╣реИ"
            ],
            culturalContext: [
                "ЁЯМзя╕П рдорд╛рдирд╕реВрди рдХрд╛ рдореМрд╕рдо рд╣рдорд╛рд░реА рдлрд╕рд▓реЛрдВ рдореЗрдВ рдЬреАрд╡рди рд▓рд╛рддрд╛ рд╣реИ",
                "ЁЯПФя╕П рдЧрдВрдЧрд╛ рдЬреИрд╕реА рдирджрд┐рдпрд╛рдВ рдкрд╣рд╛рдбрд╝реА рдЧреНрд▓реЗрд╢рд┐рдпрд░реЛрдВ рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рд╣реИрдВ",
                "ЁЯМК рд╣рдорд╛рд░реЗ рдкреВрд░реНрд╡рдЬреЛрдВ рдиреЗ рд╡реИрджрд┐рдХ рдЧреНрд░рдВрдереЛрдВ рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдЗрд╕ рдЪрдХреНрд░ рдХреЛ рдЬрд╛рдирд╛ рдерд╛"
            ]
        },
        kn: {
            explanation: [
                { step: 1, text: "р▓╕р│Вр▓░р│Нр▓пр▓ир│Б р▓╕р▓ор│Бр▓жр│Нр▓░, р▓ир▓жр▓┐р▓Чр▓│р│Б р▓ор▓др│Нр▓др│Б р▓Хр│Жр▓░р│Жр▓Чр▓│ р▓ир│Ар▓░р▓ир│Нр▓ир│Б р▓мр▓┐р▓╕р▓┐р▓ор▓╛р▓бр│Бр▓др│Нр▓др▓╛р▓ир│Ж", emoji: "тШАя╕ПЁЯТз" },
                { step: 2, text: "р▓ир│Ар▓░р│Б р▓Ер▓жр│Гр▓╢р│Нр▓п р▓Жр▓╡р▓┐р▓пр▓╛р▓Чр▓┐ р▓ор│Зр▓▓р▓Хр│Нр▓Хр│Ж р▓Пр▓░р│Бр▓др│Нр▓др▓жр│Ж (р▓мр▓╛р▓╖р│Нр▓кр│Ар▓Хр▓░р▓г)", emoji: "ЁЯТитмЖя╕П" },
                { step: 3, text: "р▓Жр▓Хр▓╛р▓╢р▓жр▓▓р│Нр▓▓р▓┐ р▓ор│Зр▓▓р│Ж, р▓Жр▓╡р▓┐ р▓др▓гр│Нр▓гр▓Чр▓╛р▓Чр▓┐ р▓╕р▓гр│Нр▓г р▓ир│Ар▓░р▓┐р▓и р▓╣р▓ир▓┐р▓Чр▓│р▓ир│Нр▓ир│Б р▓░р│Вр▓кр▓┐р▓╕р│Бр▓др│Нр▓др▓жр│Ж (р▓╕р▓╛р▓Вр▓жр│Нр▓░р│Ар▓Хр▓░р▓г)", emoji: "тШБя╕ПтЭДя╕П" },
                { step: 4, text: "р▓ор│Лр▓бр▓Чр▓│р│Б р▓ир│Ар▓░р▓┐р▓ир▓┐р▓Вр▓ж р▓нр▓╛р▓░р▓╡р▓╛р▓жр▓╛р▓Ч, р▓Ер▓жр│Б р▓ор▓│р│Жр▓пр▓╛р▓Чр▓┐ р▓мр│Ар▓│р│Бр▓др│Нр▓др▓жр│Ж (р▓╡р▓░р│Нр▓╖р▓г)", emoji: "ЁЯМзя╕ПтмЗя╕П" },
                { step: 5, text: "р▓ор▓│р│Ж р▓ор▓др│Нр▓др│Ж р▓╕р▓ор│Бр▓жр│Нр▓░ р▓ор▓др│Нр▓др│Б р▓ир▓жр▓┐р▓Чр▓│р▓┐р▓Чр│Ж р▓╣р▓░р▓┐р▓пр│Бр▓др│Нр▓др▓жр│Ж, р▓ор▓др│Нр▓др│Б р▓Ър▓Хр│Нр▓░ р▓ор▓др│Нр▓др│Ж р▓кр│Нр▓░р▓╛р▓░р▓Вр▓нр▓╡р▓╛р▓Чр│Бр▓др│Нр▓др▓жр│Ж!", emoji: "ЁЯМКЁЯФД" }
            ],
            localExample: {
                title: "ЁЯПа р▓ир▓┐р▓ор│Нр▓о р▓Ер▓бр│Бр▓Чр│Жр▓ор▓ир│Жр▓п р▓мр▓Чр│Нр▓Чр│Ж р▓пр│Лр▓Ър▓┐р▓╕р▓┐!",
                content: "р▓Ер▓ор│Нр▓о р▓мр▓╛р▓гр▓▓р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓ир│Ар▓░р▓ир│Нр▓ир│Б р▓мр▓┐р▓╕р▓┐р▓ор▓╛р▓бр▓┐р▓жр▓╛р▓Ч, р▓ир│Ар▓╡р│Б р▓Жр▓╡р▓┐ р▓ор│Зр▓▓р▓Хр│Нр▓Хр│Ж р▓Пр▓░р│Бр▓╡р│Бр▓жр▓ир│Нр▓ир│Б р▓ир│Лр▓бр│Бр▓др│Нр▓др│Ар▓░р▓┐. р▓Ж р▓Жр▓╡р▓┐ р▓мр▓╛р▓╖р│Нр▓кр│Ар▓Хр▓░р▓гр▓жр▓Вр▓др│Ж! р▓др▓гр│Нр▓гр▓ир│Жр▓п р▓Хр▓┐р▓Яр▓Хр▓┐р▓п р▓ор│Зр▓▓р│Ж р▓Йр▓╕р▓┐р▓░р▓╛р▓бр▓┐р▓жр▓╛р▓Ч, р▓ир│Ар▓░р▓┐р▓и р▓╣р▓ир▓┐р▓Чр▓│р│Б р▓Хр▓╛р▓гр▓┐р▓╕р│Бр▓др│Нр▓др▓╡р│Ж - р▓Ер▓жр│Б р▓╕р▓╛р▓Вр▓жр│Нр▓░р│Ар▓Хр▓░р▓г!"
            },
            smartTranslation: [
                "р▓мр▓╛р▓╖р│Нр▓кр│Ар▓Хр▓░р▓г = р▓╢р▓╛р▓Цр▓жр▓┐р▓Вр▓ж р▓ир│Ар▓░р│Б р▓Жр▓╡р▓┐р▓пр▓╛р▓Чр│Бр▓╡р│Бр▓жр│Б, р▓Хр│Жр▓Яр▓▓р│НтАМр▓ир▓┐р▓Вр▓ж р▓Жр▓╡р▓┐ р▓мр▓░р│Бр▓╡р▓Вр▓др│Ж",
                "р▓╕р▓╛р▓Вр▓жр│Нр▓░р│Ар▓Хр▓░р▓г = р▓Жр▓╡р▓┐ р▓др▓гр│Нр▓гр▓Чр▓╛р▓Чр▓┐ р▓ор▓др│Нр▓др│Ж р▓ир│Ар▓░р▓╛р▓Чр│Бр▓╡р│Бр▓жр│Б, р▓др▓гр│Нр▓гр▓ир│Жр▓п р▓Чр│Нр▓▓р▓╛р▓╕р│НтАМр▓и р▓ор│Зр▓▓р│Ж р▓ир│Ар▓░р▓┐р▓и р▓╣р▓ир▓┐р▓Чр▓│р▓Вр▓др│Ж",
                "р▓ор▓│р│Ж = р▓ор│Лр▓бр▓Чр▓│р▓┐р▓Вр▓ж р▓мр│Ар▓│р│Бр▓╡ р▓ир│Ар▓░р│Б, р▓Ер▓жр│Б р▓ор▓др│Нр▓др│Ж р▓ир▓жр▓┐р▓Чр▓│р▓┐р▓Чр│Ж р▓╕р│Зр▓░р│Бр▓др│Нр▓др▓жр│Ж"
            ],
            culturalContext: [
                "ЁЯМзя╕П р▓ор▓╛р▓ир│Нр▓╕р│Вр▓ир│Н р▓Лр▓др│Бр▓╡р│Б р▓ир▓ор│Нр▓о р▓мр│Жр▓│р│Жр▓Чр▓│р▓┐р▓Чр│Ж р▓Ьр│Ар▓╡р▓и р▓др▓░р│Бр▓др│Нр▓др▓жр│Ж",
                "ЁЯПФя╕П р▓Хр▓╛р▓╡р│Зр▓░р▓┐р▓пр▓Вр▓др▓╣ р▓ир▓жр▓┐р▓Чр▓│р│Б р▓кр▓░р│Нр▓╡р▓д р▓╣р▓┐р▓ор▓ир▓жр▓┐р▓Чр▓│р▓┐р▓Вр▓ж р▓Жр▓░р▓Вр▓нр▓╡р▓╛р▓Чр│Бр▓др│Нр▓др▓╡р│Ж",
                "ЁЯМК р▓ир▓ор│Нр▓о р▓кр│Вр▓░р│Нр▓╡р▓Ьр▓░р│Б р▓кр│Бр▓░р▓╛р▓гр▓Чр▓│ р▓ор│Вр▓▓р▓Х р▓И р▓Ър▓Хр│Нр▓░р▓╡р▓ир│Нр▓ир│Б р▓др▓┐р▓│р▓┐р▓жр▓┐р▓жр│Нр▓жр▓░р│Б"
            ]
        },
        mr: {
            explanation: [
                { step: 1, text: "рд╕реВрд░реНрдп рд╕рдореБрджреНрд░, рдирджреНрдпрд╛ рдЖрдгрд┐ рддрд▓рд╛рд╡рд╛рдВрдЪреЗ рдкрд╛рдгреА рдЧрд░рдо рдХрд░рддреЛ", emoji: "тШАя╕ПЁЯТз" },
                { step: 2, text: "рдкрд╛рдгреА рдЕрджреГрд╢реНрдп рд╡рд╛рд╖реНрдк рдмрдиреВрди рд╡рд░ рдЪрдврддреЗ (рдмрд╛рд╖реНрдкреАрднрд╡рди)", emoji: "ЁЯТитмЖя╕П" },
                { step: 3, text: "рдЖрдХрд╛рд╢рд╛рдд рд╡рд░, рд╡рд╛рд╖реНрдк рдердВрдб рд╣реЛрдКрди рд▓рд╣рд╛рди рдкрд╛рдгреНрдпрд╛рдЪреЗ рдереЗрдВрдм рддрдпрд╛рд░ рдХрд░рддреЗ (рд╕рдВрдХреНрд╖реЗрдкрдг)", emoji: "тШБя╕ПтЭДя╕П" },
                { step: 4, text: "рдЬреЗрд╡реНрд╣рд╛ рдврдЧ рдкрд╛рдгреНрдпрд╛рдиреЗ рдЬрдб рд╣реЛрддрд╛рдд, рддреЗрд╡реНрд╣рд╛ рдкрд╛рдКрд╕ рдкрдбрддреЛ (рдкрд░реНрдЬрдиреНрдп)", emoji: "ЁЯМзя╕ПтмЗя╕П" },
                { step: 5, text: "рдкрд╛рдКрд╕ рдкрд░рдд рд╕рдореБрджреНрд░ рдЖрдгрд┐ рдирджреНрдпрд╛рдВрдордзреНрдпреЗ рд╡рд╛рд╣рддреЛ, рдЖрдгрд┐ рдЪрдХреНрд░ рдкреБрдиреНрд╣рд╛ рд╕реБрд░реВ рд╣реЛрддреЗ!", emoji: "ЁЯМКЁЯФД" }
            ],
            localExample: {
                title: "ЁЯПа рддреБрдордЪреНрдпрд╛ рд╕реНрд╡рдпрдВрдкрд╛рдХрдШрд░рд╛рдЪрд╛ рд╡рд┐рдЪрд╛рд░ рдХрд░рд╛!",
                content: "рдЬреЗрд╡реНрд╣рд╛ рдЖрдИ рднрд╛рдВрдбреНрдпрд╛рдд рдкрд╛рдгреА рдЧрд░рдо рдХрд░рддреЗ, рддреЗрд╡реНрд╣рд╛ рддреБрдореНрд╣рд╛рд▓рд╛ рд╡рд╛рдл рд╡рд░ рдЬрд╛рддрд╛рдирд╛ рджрд┐рд╕рддреЗ. рддреА рд╡рд╛рдл рдмрд╛рд╖реНрдкреАрднрд╡рдирд╛рд╕рд╛рд░рдЦреА рдЖрд╣реЗ! рдЬреЗрд╡реНрд╣рд╛ рддреБрдореНрд╣реА рдердВрдб рдЦрд┐рдбрдХреАрд╡рд░ рд╢реНрд╡рд╛рд╕ рдШреЗрддрд╛, рддреЗрд╡реНрд╣рд╛ рдкрд╛рдгреНрдпрд╛рдЪреЗ рдереЗрдВрдм рджрд┐рд╕рддрд╛рдд - рддреЗ рд╕рдВрдХреНрд╖реЗрдкрдг рдЖрд╣реЗ!"
            },
            smartTranslation: [
                "рдмрд╛рд╖реНрдкреАрднрд╡рди = рдЙрд╖реНрдгрддреЗрдореБрд│реЗ рдкрд╛рдгреА рд╡рд╛рдл рдмрдирдгреЗ, рдХреЗрдЯрд▓рдордзреВрди рд╡рд╛рдл рдирд┐рдШрдгреНрдпрд╛рд╕рд╛рд░рдЦреЗ",
                "рд╕рдВрдХреНрд╖реЗрдкрдг = рд╡рд╛рдл рдердВрдб рд╣реЛрдКрди рдкрд░рдд рдкрд╛рдгреА рдмрдирдгреЗ, рдердВрдб рдЧреНрд▓рд╛рд╕рд╡рд░ рдкрд╛рдгреНрдпрд╛рдЪреЗ рдереЗрдВрдм рдпрд╛рд╕рд╛рд░рдЦреЗ",
                "рдкрд╛рдКрд╕ = рдврдЧрд╛рдВрдордзреВрди рдкрдбрдгрд╛рд░реЗ рдкрд╛рдгреА, рдЬреЗ рдкрд░рдд рдирджреНрдпрд╛рдВрдордзреНрдпреЗ рдорд┐рд│рддреЗ"
            ],
            culturalContext: [
                "ЁЯМзя╕П рдкрд╛рд╡рд╕рд╛рд│рд╛ рдЖрдкрд▓реНрдпрд╛ рдкрд┐рдХрд╛рдВрдордзреНрдпреЗ рдЬреАрд╡рди рдЖрдгрддреЛ",
                "ЁЯПФя╕П рдЧреЛрджрд╛рд╡рд░реАрд╕рд╛рд░рдЦреНрдпрд╛ рдирджреНрдпрд╛ рдкрд░реНрд╡рддреАрдп рд╣рд┐рдордирджреНрдпрд╛рдВрдкрд╛рд╕реВрди рд╕реБрд░реВ рд╣реЛрддрд╛рдд",
                "ЁЯМК рдЖрдкрд▓реНрдпрд╛ рдкреВрд░реНрд╡рдЬрд╛рдВрдиреА рдкреБрд░рд╛рдгрд╛рдВрдЪреНрдпрд╛ рдорд╛рдзреНрдпрдорд╛рддреВрди рд╣реЗ рдЪрдХреНрд░ рдЬрд╛рдгрд▓реЗ рд╣реЛрддреЗ"
            ]
        }
    }
};

// Audio simulation (in a real app, this would play actual audio files)
let isPlaying = false;

document.addEventListener('DOMContentLoaded', function() {
    const languageSelector = document.getElementById('languageSelector');
    if (languageSelector) {
        languageSelector.addEventListener('click', showLanguageMenu);
    }
    
    // Initialize with English
    updateLanguageDisplay();
});

function showLanguageMenu() {
    // Create a dropdown menu for language selection
    const existingMenu = document.getElementById('languageMenu');
    if (existingMenu) {
        existingMenu.remove();
        return;
    }

    const menu = document.createElement('div');
    menu.id = 'languageMenu';
    menu.className = 'absolute top-full right-0 mt-2 bg-white border border-gray-200 rounded-xl shadow-lg z-50 overflow-hidden';
    menu.style.minWidth = '200px';
    
    const languages = [
        { code: 'en', name: 'English', flag: 'ЁЯЗ║ЁЯЗ╕' },
        { code: 'hi', name: 'рд╣рд┐рдВрджреА', flag: 'ЁЯЗоЁЯЗ│' },
        { code: 'kn', name: 'р▓Хр▓ир│Нр▓ир▓б', flag: 'ЁЯПЫя╕П' },
        { code: 'mr', name: 'рдорд░рд╛рдареА', flag: 'ЁЯХЙя╕П' }
    ];
    
    languages.forEach(lang => {
        const option = document.createElement('button');
        option.className = `w-full text-left px-4 py-3 hover:bg-gray-100 flex items-center space-x-3 transition-colors ${currentLanguage === lang.code ? 'bg-purple-50 text-purple-700' : 'text-gray-700'}`;
        option.innerHTML = `
            <span class="text-xl">${lang.flag}</span>
            <span class="font-semibold">${lang.name}</span>
        `;
        option.onclick = () => {
            selectLanguage(lang.code);
            menu.remove();
        };
        menu.appendChild(option);
    });
    
    const selector = document.getElementById('languageSelector');
    selector.style.position = 'relative';
    selector.appendChild(menu);
}

function selectLanguage(language) {
    currentLanguage = language;
    updateLanguageDisplay();
    updateLanguageSelector();
    
    // Show demo content
    const demoContent = document.getElementById('demoContent');
    if (demoContent.classList.contains('hidden')) {
        demoContent.classList.remove('hidden');
        demoContent.style.animation = 'slideInUp 0.6s ease-out';
    }
    
    // Update content based on selected language
    updateWaterCycleContent();
    showToast(getToastMessage());
}

function getToastMessage() {
    const messages = {
        en: `ЁЯМН Switched to English! Learning with global examples.`,
        hi: `ЁЯЗоЁЯЗ│ рд╣рд┐рдВрджреА рдореЗрдВ рдмрджрд▓ рдЧрдпрд╛! рд╕реНрдерд╛рдиреАрдп рдЙрджрд╛рд╣рд░рдгреЛрдВ рдХреЗ рд╕рд╛рде рд╕реАрдЦ рд░рд╣реЗ рд╣реИрдВред`,
        kn: `ЁЯПЫя╕П р▓Хр▓ир│Нр▓ир▓бр▓Хр│Нр▓Хр│Ж р▓мр▓жр▓▓р▓╛р▓пр▓┐р▓╕р▓▓р▓╛р▓Чр▓┐р▓жр│Ж! р▓╕р│Нр▓ер▓│р│Ар▓п р▓Йр▓жр▓╛р▓╣р▓░р▓гр│Жр▓Чр▓│р│Кр▓Вр▓жр▓┐р▓Чр│Ж р▓Хр▓▓р▓┐р▓пр│Бр▓др│Нр▓др▓┐р▓жр│Нр▓жр│Зр▓╡р│Ж.`,
        mr: `ЁЯХЙя╕П рдорд░рд╛рдареАрдд рдмрджрд▓рд▓реЗ! рд╕реНрдерд╛рдирд┐рдХ рдЙрджрд╛рд╣рд░рдгрд╛рдВрд╕рд╣ рд╢рд┐рдХрдд рдЖрд╣реЛрдд.`
    };
    return messages[currentLanguage] || messages.en;
}

function updateLanguageDisplay() {
    const elements = document.querySelectorAll('[data-en]');
    elements.forEach(element => {
        const text = element.getAttribute(`data-${currentLanguage}`);
        if (text) {
            element.textContent = text;
        }
    });
}

function updateLanguageSelector() {
    const selector = document.getElementById('languageSelector');
    const languageNames = {
        en: 'ЁЯМР English',
        hi: 'ЁЯМР рд╣рд┐рдВрджреА',
        kn: 'ЁЯМР р▓Хр▓ир│Нр▓ир▓б',
        mr: 'ЁЯМР рдорд░рд╛рдареА'
    };
    selector.textContent = languageNames[currentLanguage] || 'ЁЯМР English';
}

function updateWaterCycleContent() {
    const content = languageContent.waterCycle[currentLanguage];
    if (!content) return;
    
    // Update explanation
    const explanationDiv = document.getElementById('explanation');
    explanationDiv.innerHTML = '';
    
    content.explanation.forEach((step, index) => {
        const stepDiv = document.createElement('div');
        stepDiv.className = 'flex items-start space-x-3 mb-3';
        stepDiv.innerHTML = `
            <div class="flex-shrink-0 w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center font-bold text-blue-700">${step.step}</div>
            <div class="flex-1">
                <p class="text-gray-700">${step.text}</p>
                <span class="text-2xl">${step.emoji}</span>
            </div>
        `;
        
        // Add entrance animation
        stepDiv.style.opacity = '0';
        stepDiv.style.transform = 'translateX(-20px)';
        explanationDiv.appendChild(stepDiv);
        
        setTimeout(() => {
            stepDiv.style.transition = 'all 0.5s ease-out';
            stepDiv.style.opacity = '1';
            stepDiv.style.transform = 'translateX(0)';
        }, index * 100);
    });
    
    // Update local example
    const localExampleDiv = document.getElementById('localExample');
    localExampleDiv.innerHTML = `
        <div class="font-bold text-yellow-700 mb-2">${content.localExample.title}</div>
        <p class="text-gray-700 text-sm">${content.localExample.content}</p>
    `;
    
    // Update smart translation
    const smartTranslationDiv = document.getElementById('smartTranslation');
    smartTranslationDiv.innerHTML = '';
    
    content.smartTranslation.forEach((translation, index) => {
        const translationDiv = document.createElement('p');
        translationDiv.textContent = translation;
        translationDiv.style.opacity = '0';
        smartTranslationDiv.appendChild(translationDiv);
        
        setTimeout(() => {
            translationDiv.style.transition = 'opacity 0.5s ease-out';
            translationDiv.style.opacity = '1';
        }, index * 200 + 500);
    });
    
    // Update cultural context
    const culturalContextDiv = document.getElementById('culturalContext');
    culturalContextDiv.innerHTML = '';
    
    content.culturalContext.forEach((context, index) => {
        const contextDiv = document.createElement('div');
        contextDiv.className = 'flex items-center space-x-2 bg-white bg-opacity-50 rounded-lg p-2';
        contextDiv.innerHTML = `<span class="text-sm text-gray-700">${context}</span>`;
        
        contextDiv.style.opacity = '0';
        contextDiv.style.transform = 'translateY(10px)';
        culturalContextDiv.appendChild(contextDiv);
        
        setTimeout(() => {
            contextDiv.style.transition = 'all 0.5s ease-out';
            contextDiv.style.opacity = '1';
            contextDiv.style.transform = 'translateY(0)';
        }, index * 150 + 1000);
    });
}

function goHome() {
    window.location.href = '/';
}

function playAudio() {
    if (isPlaying) return;
    
    isPlaying = true;
    const button = event.target.closest('button');
    const originalContent = button.innerHTML;
    
    button.innerHTML = '<span class="text-lg animate-pulse">ЁЯФК</span>';
    button.style.animation = 'pulse 1s infinite';
    
    // Simulate audio playback
    setTimeout(() => {
        button.innerHTML = originalContent;
        button.style.animation = '';
        isPlaying = false;
        
        showToast(currentLanguage === 'en' ? 
            'ЁЯФК Audio narration complete!' : 
            currentLanguage === 'hi' ? 'ЁЯФК рдСрдбрд┐рдпреЛ рдХрдерди рдкреВрд░рд╛!' :
            currentLanguage === 'kn' ? 'ЁЯФК р▓Жр▓бр▓┐р▓пр│Л р▓Хр▓ер▓и р▓кр│Вр▓░р│Нр▓г!' :
            'ЁЯФК рдСрдбрд┐рдУ рдХрдерди рдкреВрд░реНрдг!'
        );
    }, 3000);
    
    showToast(currentLanguage === 'en' ? 
        'ЁЯО╡ Playing narration in your language...' : 
        currentLanguage === 'hi' ? 'ЁЯО╡ рдЖрдкрдХреА рднрд╛рд╖рд╛ рдореЗрдВ рдХрдерди рдЪрд▓ рд░рд╣рд╛ рд╣реИ...' :
        currentLanguage === 'kn' ? 'ЁЯО╡ р▓ир▓┐р▓ор│Нр▓о р▓нр▓╛р▓╖р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓Хр▓ер▓и р▓кр│Нр▓▓р│З р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...' :
        'ЁЯО╡ рддреБрдордЪреНрдпрд╛ рднрд╛рд╖реЗрдд рдХрдерди рдкреНрд▓реЗ рд╣реЛрдд рдЖрд╣реЗ...'
    );
}

function playSlowNarration() {
    simulateAudioPlayback('slow', 4000);
}

function playNormalNarration() {
    simulateAudioPlayback('normal', 2500);
}

function repeatKeyWords() {
    simulateAudioPlayback('keywords', 1500);
}

function simulateAudioPlayback(type, duration) {
    const button = event.target;
    const originalContent = button.textContent;
    
    button.style.animation = 'pulse 0.5s infinite';
    button.style.backgroundColor = '#8b5cf6';
    button.style.color = 'white';
    
    const messages = {
        slow: {
            en: 'ЁЯРМ Playing slowly for better understanding...',
            hi: 'ЁЯРМ рдмреЗрд╣рддрд░ рд╕рдордЭ рдХреЗ рд▓рд┐рдП рдзреАрдореЗ рдЪрд▓ рд░рд╣рд╛ рд╣реИ...',
            kn: 'ЁЯРМ р▓Йр▓др│Нр▓др▓о р▓др▓┐р▓│р│Бр▓╡р▓│р▓┐р▓Хр│Жр▓Чр▓╛р▓Чр▓┐ р▓ир▓┐р▓зр▓╛р▓ир▓╡р▓╛р▓Чр▓┐ р▓кр│Нр▓▓р│З р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
            mr: 'ЁЯРМ рдЪрд╛рдВрдЧрд▓реНрдпрд╛ рд╕рдордЬреБрддреАрд╕рд╛рдареА рд╣рд│реВ рдкреНрд▓реЗ рд╣реЛрдд рдЖрд╣реЗ...'
        },
        normal: {
            en: 'тЦ╢я╕П Playing at normal speed...',
            hi: 'тЦ╢я╕П рд╕рд╛рдорд╛рдиреНрдп рдЧрддрд┐ рд╕реЗ рдЪрд▓ рд░рд╣рд╛ рд╣реИ...',
            kn: 'тЦ╢я╕П р▓╕р▓╛р▓ор▓╛р▓ир│Нр▓п р▓╡р│Зр▓Чр▓жр▓▓р│Нр▓▓р▓┐ р▓кр│Нр▓▓р│З р▓Жр▓Чр│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
            mr: 'тЦ╢я╕П рд╕рд╛рдорд╛рдиреНрдп рд╡реЗрдЧрд╛рдиреЗ рдкреНрд▓реЗ рд╣реЛрдд рдЖрд╣реЗ...'
        },
        keywords: {
            en: 'ЁЯФД Repeating important words...',
            hi: 'ЁЯФД рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╢рдмреНрджреЛрдВ рдХреЛ рджреЛрд╣рд░рд╛ рд░рд╣рд╛ рд╣реИ...',
            kn: 'ЁЯФД р▓кр│Нр▓░р▓ор│Бр▓Ц р▓кр▓жр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр│Бр▓ир▓░р▓╛р▓╡р▓░р│Нр▓др▓┐р▓╕р│Бр▓др│Нр▓др▓┐р▓жр│Ж...',
            mr: 'ЁЯФД рдорд╣рддреНрд╡рд╛рдЪреЗ рд╢рдмреНрдж рдкреБрдиреНрд╣рд╛ рдореНрд╣рдгрдд рдЖрд╣реЗ...'
        }
    };
    
    showToast(messages[type][currentLanguage]);
    
    setTimeout(() => {
        button.style.animation = '';
        button.style.backgroundColor = '';
        button.style.color = '';
        
        const completedMessages = {
            slow: {
                en: 'тЬЕ Slow narration complete!',
                hi: 'тЬЕ рдзреАрдорд╛ рдХрдерди рдкреВрд░рд╛!',
                kn: 'тЬЕ р▓ир▓┐р▓зр▓╛р▓и р▓Хр▓ер▓и р▓кр│Вр▓░р│Нр▓г!',
                mr: 'тЬЕ рдордВрдж рдХрдерди рдкреВрд░реНрдг!'
            },
            normal: {
                en: 'тЬЕ Narration complete!',
                hi: 'тЬЕ рдХрдерди рдкреВрд░рд╛!',
                kn: 'тЬЕ р▓Хр▓ер▓и р▓кр│Вр▓░р│Нр▓г!',
                mr: 'тЬЕ рдХрдерди рдкреВрд░реНрдг!'
            },
            keywords: {
                en: 'тЬЕ Key words repeated!',
                hi: 'тЬЕ рдореБрдЦреНрдп рд╢рдмреНрдж рджреЛрд╣рд░рд╛рдП рдЧрдП!',
                kn: 'тЬЕ р▓ор│Бр▓Цр│Нр▓п р▓кр▓жр▓Чр▓│р▓ир│Нр▓ир│Б р▓кр│Бр▓ир▓░р▓╛р▓╡р▓░р│Нр▓др▓┐р▓╕р▓▓р▓╛р▓пр▓┐р▓др│Б!',
                mr: 'тЬЕ рдореБрдЦреНрдп рд╢рдмреНрдж рдкреБрдиреНрд╣рд╛ рдореНрд╣рдЯрд▓реЗ!'
            }
        };
        
        showToast(completedMessages[type][currentLanguage]);
    }, duration);
}

function exploreMoreLanguages() {
    showToast(currentLanguage === 'en' ? 
        'ЁЯЪА More subjects coming soon! Math, History, and Geography in your language!' : 
        currentLanguage === 'hi' ? 'ЁЯЪА рдФрд░ рд╡рд┐рд╖рдп рдЬрд▓реНрдж рдЖ рд░рд╣реЗ рд╣реИрдВ! рдЖрдкрдХреА рднрд╛рд╖рд╛ рдореЗрдВ рдЧрдгрд┐рдд, рдЗрддрд┐рд╣рд╛рд╕ рдФрд░ рднреВрдЧреЛрд▓!' :
        currentLanguage === 'kn' ? 'ЁЯЪА р▓╣р│Жр▓Ър│Нр▓Ър▓┐р▓и р▓╡р▓┐р▓╖р▓пр▓Чр▓│р│Б р▓╢р│Ар▓Шр│Нр▓░р▓жр▓▓р│Нр▓▓р│З р▓мр▓░р│Бр▓др│Нр▓др▓┐р▓╡р│Ж! р▓ир▓┐р▓ор│Нр▓о р▓нр▓╛р▓╖р│Жр▓пр▓▓р│Нр▓▓р▓┐ р▓Чр▓гр▓┐р▓д, р▓Зр▓др▓┐р▓╣р▓╛р▓╕ р▓ор▓др│Нр▓др│Б р▓нр│Вр▓Чр│Лр▓│!' :
        'ЁЯЪА рдЕрдзрд┐рдХ рд╡рд┐рд╖рдп рд▓рд╡рдХрд░рдЪ рдпреЗрдд рдЖрд╣реЗрдд! рддреБрдордЪреНрдпрд╛ рднрд╛рд╖реЗрдд рдЧрдгрд┐рдд, рдЗрддрд┐рд╣рд╛рд╕ рдЖрдгрд┐ рднреВрдЧреЛрд▓!'
    );
}

function showToast(message) {
    // Create toast notification
    const toast = document.createElement('div');
    toast.className = 'fixed top-4 right-4 bg-purple-500 text-white px-6 py-3 rounded-full shadow-lg z-50 transform translate-x-full transition-transform duration-300';
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    // Slide in
    setTimeout(() => {
        toast.style.transform = 'translateX(0)';
    }, 100);
    
    // Slide out and remove
    setTimeout(() => {
        toast.style.transform = 'translateX(full)';
        setTimeout(() => {
            if (document.body.contains(toast)) {
                document.body.removeChild(toast);
            }
        }, 300);
    }, 3000);
}

// Add entrance animations when page loads
document.addEventListener('DOMContentLoaded', function() {
    // Add hover effects to language cards
    const languageCards = document.querySelectorAll('.language-card');
    languageCards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'scale(1.05) rotateY(5deg)';
            this.style.boxShadow = '0 15px 30px rgba(0,0,0,0.2)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'scale(1) rotateY(0deg)';
            this.style.boxShadow = 'none';
        });
    });
});

// Close language menu when clicking outside
document.addEventListener('click', function(event) {
    const menu = document.getElementById('languageMenu');
    const selector = document.getElementById('languageSelector');
    
    if (menu && !selector.contains(event.target)) {
        menu.remove();
    }
});